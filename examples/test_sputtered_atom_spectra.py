from libRustBCA import *
import numpy as np
import matplotlib.pyplot as plt
import sys
import os
#This should allow the script to find materials and formulas from anywhere
sys.path.append(os.path.dirname(__file__)+'/../scripts')
sys.path.append('scripts')
from materials import *
from formulas import *

data_exp_0_10_deg = np.array([
    [1.795219872324359, 0.9533726147006264],
    [2.431545232813113, 1.0000000000000002],
    [3.552942960337357, 0.968668361722603],
    [5.135565058063388, 0.839388729523552],
    [6.518049391281579, 0.727362910870967],
    [8.73326162382844, 0.5549318240872879],
    [10.964781961431852, 0.4101127070551304],
    [14.532921950830353, 0.27113134189526106],
    [18.246369720400814, 0.1880154542858142],
    [21.466671275519875, 0.12832017135233023],
    [25.808615404180767, 0.09186152281210946],
    [31.70855642178006, 0.05882815844474357],
    [36.90275785618217, 0.04144875792022527],
    [40.68288702863619, 0.03063198320387291],
    [46.33213925076186, 0.021928747399631854],
    [52.19718220435652, 0.014966326223296179],
    [57.54399373371572, 0.009284145445194745],
])
data_oksana_0_10_deg = np.array([
    [1.0108946133097567, 0.7045734392511628],
    [1.3254182346670706, 0.8130893054759956],
    [1.795219872324359, 0.9383183950023508],
    [2.4580359778697947, 1.0000000000000002],
    [3.591650900001854, 1.0000000000000002],
    [5.135565058063388, 0.908919342461109],
    [6.660846290809163, 0.7629366521078121],
    [8.73326162382844, 0.6203356325845223],
    [10.964781961431852, 0.48086996251685976],
    [14.532921950830353, 0.35537857716782895],
    [18.246369720400814, 0.2584891963499745],
    [21.466671275519875, 0.1850465983402524],
    [25.808615404180767, 0.13675546811805692],
    [31.70855642178006, 0.08898335080774952],
    [36.90275785618217, 0.0668166646296556],
    [40.68288702863619, 0.05432791543794923],
    [45.83280852498209, 0.04015010043002134],
    [51.63464273833496, 0.02451325153735838],
    [58.17091329374364, 0.018406743419819866],
    [69.1830970918937, 0.011418358823154931],
    [82.27996866848511, 0.006137880562106176],
    [97.85617482684427, 0.002998876115879274],
    [115.1268098518791, 0.001374829517774794],
])

data_oksana = np.array([
    [1.1708281368909705, 0.8931414506078489],
    [1.5308460109164432, 0.9721427940738623],
    [1.970246424053571, 0.9721427940738623],
    [2.7008897040734974, 0.9721427940738623],
    [3.8211297149093113, 0.8682610252970971],
    [6.037010313703754, 0.6363279236793021],
    [8.954777399948457, 0.4407291533212],
    [13.282739984823985, 0.25047997204261246],
    [19.09070284923147, 0.13078695156316839],
    [27.438234558085025, 0.06638743505522715],
    [42.671409285185625, 0.02844380745224324],
    [61.3297554384229, 0.011196434778829558],
    [90.97123897530997, 0.003720078867528625],
    [130.7489940395067, 0.0011039382600225845],
    [190.90702849231468, 0.00022057601289773862],
])
data_trim_sp = np.array([
    [1.1708281368909705, 0.8682610252970971],
    [1.5308460109164432, 0.9721427940738623],
    [1.970246424053571, 0.9721427940738623],
    [2.7008897040734974, 0.9721427940738623],
    [3.8211297149093113, 0.8205601642645971],
    [6.037010313703754, 0.6013690933573494],
    [8.954777399948457, 0.4165162041238635],
    [13.282739984823985, 0.2650408913489223],
    [18.791982647375733, 0.16395472095739783],
    [27.438234558085025, 0.09058477599821053],
    [42.671409285185625, 0.039923351629481865],
    [61.3297554384229, 0.01809958893761981],
    [90.97123897530997, 0.006926132531994934],
    [130.7489940395067, 0.0023671900616977384],
    [187.91982647375713, 0.0005929337004735993],
    [253.57684207388002, 0.00010000000000000021],
])

oksana_500 = np.array([
    [3.2154340836012807, 0.9298674652605262],
    [12.861736334405123, 0.257351270001691],
    [24.115755627009662, 0.1],
    [40.192926045016065, 0.032008340465997674],
    [62.700964630225144, 0.010496696290308798],
    [86.81672025723475, 0.0036132227567962547],
    [114.14790996784569, 0.001000000000000002],
    [138.2636655948553, 0.00024517358879792915],
    [167.20257234726688, 0.000058670670659931154],
    [191.31832797427649, 0.000010245338593872244],
])
oksana_1000 = np.array([
    [1.6077170418006403, 0.9298674652605262],
    [12.861736334405123, 0.25118864315095796],
    [30.54662379421228, 0.06622967617148331],
    [40.192926045016065, 0.039810717055349734],
    [62.700964630225144, 0.016636142493842227],
    [86.81672025723475, 0.008040131611167865],
    [114.14790996784569, 0.003792690190732254],
    [144.69453376205792, 0.0015469407652462018],
    [184.88745980707398, 0.0006309573444801943],
    [234.7266881028939, 0.0001924024182760241],
    [294.21221864951764, 0.000037018690558462135],
    [337.6205787781351, 0.00001049669629030881],
])
oksana_2000 = np.array([
    [1.6077170418006403, 0.9298674652605262],
    [12.861736334405123, 0.25118864315095796],
    [36.977491961414785, 0.06309573444801936],
    [54.662379421221885, 0.031241857136026677],
    [88.42443729903539, 0.011849068510006685],
    [135.04823151125402, 0.004493984590721679],
    [186.49517684887456, 0.0018779508018514951],
    [245.98070739549843, 0.0008439481965654006],
    [303.8585209003215, 0.00039810717055349773],
    [366.5594855305466, 0.0001924024182760241],
    [435.6913183279742, 0.00009076005216818159],
    [499.99999999999994, 0.000035266992141746665],
    [559.4855305466237, 0.000017044291274532015],
])
oksana_5000 = np.array([
    [12.861736334405123, 0.25118864315095796],
    [30.54662379421228, 0.11018063301098226],
    [56.270096463022526, 0.0379269019073225],
    [94.85530546623801, 0.016237767391887224],
    [146.30225080385856, 0.006785454573393582],
    [226.6881028938907, 0.002701338121133005],
    [327.97427652733126, 0.0011565326417902512],
    [406.7524115755627, 0.0006622967617148338],
    [464.63022508038586, 0.00044939845907216705],
    [553.0546623794212, 0.00026366508987303664],
    [638.2636655948554, 0.00016636142493842227],
    [729.903536977492, 0.00010754220761125644],
    [834.4051446945336, 0.0000615848211066028],
    [1000, 0.000023930257311805045],
])

srim_500 = np.array([
    [3.2154340836013944, 1.024599382282019],
    [12.861736334405123, 0.20605547994561435],
    [35.369774919613974, 0.040444564028863234],
    [77.17041800643074, 0.008964098010170358],
    [144.69453376205774, 0.00253334263054688],
    [244.3729903536978, 0.0009353545286845042],
    [344.0514469453374, 0.0006039522986305644],
    [424.4372990353695, 0.0005753001127001087],
    [450.16077170417975, 0.00022298978070390968],
    [456.59163987138254, 0.000036921753789087356],
    [456.59163987138254, 0.000010183933793683],
])
srim_1000 = np.array([
    [3.2154340836013944, 1.024599382282019],
    [12.861736334405123, 0.20605547994561435],
    [38.58520900321537, 0.040444564028863234],
    [80.38585209003213, 0.008964098010170358],
    [247.58842443729918, 0.000958363672304831],
    [340.83601286173644, 0.000522009131604022],
    [446.9453376205788, 0.00034534929613596964],
    [578.7781350482314, 0.00022298978070390968],
    [697.7491961414789, 0.00016658499644765562],
    [803.8585209003218, 0.00013715232249995635],
    [897.1061093247586, 0.0001625854937337872],
    [926.0450160771702, 0.00006150610223796307],
    [938.9067524115758, 0.000019156753004056052],
    [938.9067524115758, 0.00001043445227420857],
])
srim_2000 = np.array([
    [3.2154340836013944, 1.0000000000000004],
    [16.077170418006062, 0.20605547994561435],
    [38.58520900321537, 0.04143947532063884],
    [77.17041800643074, 0.008964098010170358],
    [144.69453376205774, 0.002595661294367036],
    [250.80385852090012, 0.0009353545286845042],
    [347.2668810289392, 0.0005753001127001087],
    [446.9453376205788, 0.00034534929613596964],
    [578.7781350482314, 0.00022298978070390968],
    [700.9646302250803, 0.00015487225246188873],
    [797.427652733119, 0.00012444768075857784],
    [900.32154340836, 0.00010245993822820222],
    [922.8295819935688, 0.00009296890822370853],
    [1083.601286173633, 0.00007842582625510765],
    [1286.1736334405145, 0.000058588182592362524],
    [1466.2379421221872, 0.00005188473200240593],
    [1665.5948553054664, 0.00005580869238300307],
    [1803.8585209003218, 0.000057181551741592105],
    [1871.3826366559483, 0.00002758247577257015],
    [1897.1061093247586, 0.000010183933793683],
])
srim_5000 = np.array([
    [3.2154340836013944, 1.0000000000000004],
    [12.861736334405123, 0.20110833903362435],
    [41.80064308681631, 0.042458860815617526],
    [77.17041800643074, 0.008748880943306109],
    [144.69453376205774, 0.0032302402811878513],
    [244.3729903536978, 0.001192661363416099],
    [347.2668810289392, 0.0006987586173067845],
    [450.16077170417975, 0.00041946071507487087],
    [578.7781350482314, 0.00027750561041465377],
    [691.3183279742766, 0.00019273492632738962],
    [807.0739549839222, 0.00014752493615384886],
    [922.8295819935688, 0.00012444768075857784],
    [1086.8167202572345, 0.00009525588593744557],
    [1292.6045016077164, 0.00007291163443479598],
    [1466.2379421221872, 0.000058588182592362524],
    [1665.5948553054664, 0.0000482366688774338],
    [1803.8585209003218, 0.00004376842812354139],
    [1999.9999999999995, 0.000034325751394760175],
])

yield_trim_sp = np.array([
    [99.44868379777449, 0.14099733492521718],
    [148.8912402825362, 0.3306501492695028],
    [199.58139231677055, 0.5250849312986958],
    [297.15921039359404, 0.8449466108283331],
    [496.91088635950564, 1.289654737002661],
    [696.2049308523546, 1.6251889984207488],
    [1002.7680317396586, 1.9297867743942156],
    [2012.433270130691, 2.496994027573269],
    [2996.3368557559875, 2.738985101913617],
    [5010.487142071969, 2.8876542595284915],
    [10055.437254790288, 3.2096393886804577],
])

yield_oksana_zbl = np.array([
    [98.90040709109736, 0.21806902115934437],
    [137.80205758914963, 0.3798629815834076],
    [198.48106776430075, 0.5875029383534014],
    [396.1312785291842, 1.0647795078569717],
    [700.0644998661448, 1.433456456230312],
    [1008.3271024267672, 1.657723885589316],
    [2012.433270130691, 2.034533519429473],
    [4016.442339972745, 2.3528407832211435],
    [7020.023006215825, 2.496994027573269],
    [10111.181838502403, 2.5638656594088123],

])
yield_oksana_krc = np.array([
    [100, 0.2329637662380699],
    [140.1065965676314, 0.41120677198225625],
    [199.58139231677055, 0.6660846290809157],
    [400.53553891270326, 1.1835067295194683],
    [696.2049308523546, 1.6359623861500767],
    [1008.3271024267672, 1.9044538138367328],
    [2023.5896477251576, 2.3066633648505985],
    [4016.442339972745, 2.632528170635725],
    [6981.3204819826, 2.7938172299514883],
    [10111.181838502403, 2.906796537132128],

])
yield_srim = np.array([
    [98.90040709109736, 0.4947714040850636],
    [150.54664046568803, 0.7306368599685215],
    [199.58139231677055, 0.9268328852273553],
    [398.3273215910063, 1.6251889984207488],
    [703.9454652710157, 2.4158518681039256],
    [997.239609109939, 2.964988105897036],
    [2001.3383994534818, 4.125674667864929],
    [4016.442339972745, 5.199066764846401],
    [6981.3204819826, 5.894470021435907],
    [10055.437254790288, 6.132836773591143],
])

yield_exp = np.array([
    [98.90040709109736, 0.24560878824173277],
    [98.90040709109736, 0.28030620499491193],
    [149.71665244489452, 0.4600878303875116],
    [149.71665244489452, 0.5013528314599843],
    [198.48106776430075, 0.5875029383534014],
    [198.48106776430075, 0.6660846290809157],
    [250.35681838914445, 0.7162972054537278],
    [248.97656068598883, 0.867575002428819],
    [298.80657947958076, 0.9516542611656196],
    [350.7664175200366, 1.0932952121194448],
    [496.91088635950564, 1.3068096673810672],
    [599.6684007122172, 1.350701993655997],
    [599.6684007122172, 1.5013107289081726],
    [647.9248097041271, 1.5932926487627252],
    [803.8260284178258, 1.8547811900706128],
    [1002.7680317396586, 2.1308404505536047],
    [3029.6506797955367, 2.597970087225646],
    [9835.515312273716, 3.1466462350737068],
])

#This function simply contains an entire input file as a multi-line f-string to modify some inputs.
def run_rustbca(ion, target, energy, index=0, num_samples=10000, run_sim=True, estop='LOW_ENERGY_NONLOCAL', weak_collisions=0, Eb=3.0, correction=1.0,  interaction='KR_C'):

    input_file = f'''
    [options]
    name = "{ion["symbol"]}_{target["symbol"]}_{index}"
    weak_collision_order = {weak_collisions}
    electronic_stopping_mode = "{estop}"
    mean_free_path_model = "LIQUID"
    scattering_integral = [["MENDENHALL_WELLER"]]
    interaction_potential = [["{interaction}"]]
    num_threads = 4
    num_chunks = {int(min(num_samples//10, 100))}

    [particle_parameters]
    length_unit = "ANGSTROM"
    energy_unit = "EV"
    mass_unit = "AMU"
    N = [ {num_samples} ]
    m = [ {ion["m"]}]
    Z = [ {ion["Z"]} ]
    E = [ {energy} ]
    Ec = [ {ion["Ec"]} ]
    Es = [ {ion["Es"]} ]
    interaction_index = [ 0 ]
    pos = [ [ -4.4, 0.0, 0.0,] ]
    dir = [ [ 1.0, 0.0, 0.0] ]

    [geometry_input]
    length_unit = "ANGSTROM"
    electronic_stopping_correction_factor = {correction}
    densities = [ {target["n"]/10**30} ]

    [material_parameters]
    energy_unit = "EV"
    mass_unit = "AMU"
    Eb = [ {Eb} ]
    Es = [ {target["Es"]} ]
    Ec = [ {target["Ec"]} ]
    Z = [ {target["Z"]} ]
    m = [ {target["m"]} ]
    '''

    with open(f'{ion["symbol"]}_{target["symbol"]}_{index}.toml', 'w') as file:
        file.write(input_file)

    if run_sim: os.system(f'cargo run --release --features cpr_rootfinder 0D {ion["symbol"]}_{target["symbol"]}_{index}.toml')

    sputtered_list = np.atleast_2d(np.genfromtxt(f'{ion["symbol"]}_{target["symbol"]}_{index}sputtered.output', delimiter=','))

    if np.size(sputtered_list) > 0:
        num_sputtered = np.shape(sputtered_list)[0]
        energy_sputtered = np.sum(sputtered_list[:, 2])
    else:
        num_sputtered = 0
        energy_reflected = 0.


    return sputtered_list, num_sputtered/num_samples

# Figure 4(a), V Shulga 2024

run_sim = True
sim_index = 0
num_samples = 100000
energy = 1000.0
nickel["Es"] = 4.46 # From Fig. 4(a) in V Shulga 2024
sputtered, Y = run_rustbca(argon, nickel, energy, sim_index, num_samples, run_sim)

hist, bin_edges = np.histogram(sputtered[:, 2], bins=1000, range=[0.0, 1000.0])
bin_centers = (bin_edges[1:] + bin_edges[:-1])/2.

plt.figure()
plt.plot(bin_centers, hist/np.max(hist), label='RustBCA', linewidth=1)
plt.plot(data_oksana[:, 0], data_oksana[:, 1], label='TRIM.SP', linestyle='', marker='*', markersize=7)
plt.plot(data_trim_sp[:, 0], data_trim_sp[:, 1], label='OKSANA', linestyle='--', linewidth=3)
plt.xlim([1.0, 1000.0])
plt.ylim([1e-4, 2.0])
plt.legend()
plt.xscale('log')
plt.yscale('log')
plt.title('Comparison to Fig. 4(a) in V Shulga 2024; Ar on Ni 1 keV, Es=4.46 eV, sputtered energies')
plt.xlabel('E [eV]')
plt.ylabel('N/N_max')

argon['Es'] = 5.0
vanadium = {
    'Z': 23.0,
    'm': 50.9415,
    'n': 0.07223*10**30,
    'Es': 5.33, #From Fig. 5 in V Shulga 2024
    'Ec': 5.33,
    'Eb': 0.0,
    'symbol': 'V',
    'name': 'vanadium'
}

# Figure 5, V Shulga 2024
run_sim = True
num_samples = 1000000
energy = 1000.0
sim_index = 0
sputtered, Y = run_rustbca(argon, vanadium, energy, sim_index, num_samples, run_sim)
cutoff = np.cos(10.0*np.pi/180.0)
sputtered = sputtered[sputtered[:, 6] < -cutoff]

plt.figure()
plt.plot(bin_centers, hist/np.max(hist), label='RustBCA', linewidth=1)
plt.plot(data_exp_0_10_deg[:, 0], data_exp_0_10_deg[:, 1], label='Exp. (Dembowski86)', marker='^', linestyle='', markersize=7)
plt.plot(data_oksana_0_10_deg[:, 0], data_oksana_0_10_deg[:, 1], label='OKSANA', linestyle='--', linewidth=3)
plt.xlim([1.0, 1000.0])
plt.ylim([1e-3, 2.0])
plt.legend()
plt.xscale('log')
plt.yscale('log')
plt.title('Comparison to Fig. 5 in V Shulga 2024; Ar on V 1 keV, Es=5.33 eV, sputtered energies theta=0-10')
plt.xlabel('E [eV]')
plt.ylabel('N/N_max')

# Figure 7, V Shulga 2024
run_sim = True
energies = [500, 1000, 2000, 5000]
oksana_results = [oksana_500, oksana_1000, oksana_2000, oksana_5000]
srim_results = [srim_500, srim_1000, srim_2000, srim_5000]
nickel['Es'] = 4.46
num_samples = 100000

plt.figure()
index = 1
for energy, oksana, srim in zip(energies, oksana_results, srim_results):
    sputtered, Y = run_rustbca(argon, nickel, energy, index, num_samples, run_sim)
    hist, bin_edges = np.histogram(sputtered[:, 2], bins=100, range=[0.0, 1000.0])
    bin_centers = (bin_edges[1:] + bin_edges[:-1])/2.
    color = plt.semilogy(bin_centers, hist/np.max(hist), label=f'RustBCA {energy/1000.0} keV')[0].get_color()
    plt.semilogy(oksana[:, 0], oksana[:, 1], color=color, linestyle='--', linewidth=3, label=f'Oksana {energy/1000.0} keV')
    plt.semilogy(srim[:, 0], srim[:, 1], color=color, linestyle=':', linewidth=3, label=f'SRIM {energy/1000.0} keV')
    index += 1



plt.title('Comparison to Fig. 7 in V Shulga 2024; 0.5-5 keV Ar on Si, Es=4.46 eV, sputtered energies')
plt.xlabel('E [eV]')
plt.ylabel('N/N_max')
plt.legend()
plt.xlim([0.0, 1000.0])
plt.ylim([1e-5, 2.0])


# Figure 8 A V Shulga 2024: Sputtering yields
index = 5
run_sim = True
num_energies = 5
energies = np.logspace(2, 4, num_energies)
sputtering_yield_0_eV = np.zeros(num_energies)
sputtering_yield_2_eV = np.zeros(num_energies)
sputterinng_yield_zbl = np.zeros(num_energies)
num_samples = 1000
nickel['Es'] = 4.46

plt.figure()

for energy_index, energy in enumerate(energies):
    _, Y = run_rustbca(argon, nickel, energy, index, num_samples, run_sim, Eb=2.0, estop='LOW_ENERGY_NONLOCAL', weak_collisions=3, correction=1.09)

    sputtering_yield_2_eV[energy_index] = Y

    index += 1

    _, Y = run_rustbca(argon, nickel, energy, index, num_samples, run_sim, Eb=0.0, estop='LOW_ENERGY_NONLOCAL', weak_collisions=3, correction=1.09)

    sputtering_yield_0_eV[energy_index] = Y

    index += 1

color = plt.loglog(energies, sputtering_yield_2_eV, label='RustBCA Kr-C Eb=2 eV')[0].get_color()
plt.loglog(energies, sputtering_yield_0_eV, label='RustBCA Kr-C Eb=0 eV', color=color, linestyle='--')
plt.loglog(yield_oksana_krc[:, 0], yield_oksana_krc[:, 1], label='OKSANA Kr-C')
plt.loglog(yield_trim_sp[:, 0], yield_trim_sp[:, 1], label='TRIM.SP Kr-C n=3')
plt.loglog(yield_srim[:, 0], yield_srim[:, 1], label='SRIM')
plt.scatter(yield_exp[:, 0], yield_exp[:, 1], label='Experiments compiled by V Shulga 2024', color='black')
plt.xlabel('E [eV]')
plt.ylabel('Y [at/ion]')
plt.title('Comparison to Fig. 8 V Shulga 2024 Ar->Ni Sputtering Yields')
plt.legend()

plt.show()